{"ast":null,"code":"var _jsxFileName = \"/Users/selena/readinglist/client/src/components/Home.js\";\nimport React, { Component, KeyboardEvent } from 'react';\nimport axios from 'axios';\nimport BookGrid from \"./grid/BookGrid\";\nimport BookCard from \"./grid/BookCard\";\nimport Search from './Search';\n\nclass Home extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      myBooks: [],\n      searchQuery: \"empty\"\n    };\n\n    this.myfunc = () => {\n      fetch('https://www.googleapis.com/books/v1/users/105309221066047026022/bookshelves/1001/volumes').then(response => response.json()).then(commits => alert(commits[0].author.login));\n    };\n\n    this.performSearch = (event, searchQuery) => {\n      if (event.key === 'Enter') {\n        axios.get('https://www.googleapis.com/books/v1/volumes?q=' + searchQuery).then(response => {\n          const bookList = [];\n\n          for (var i = 0; i < response.data.items.length; i++) {\n            //let imageUrl = URL.createObjectURL(response.data.items[i].volumeInfo.previewLink);\n            const bookItem = {\n              id: response.data.items[i].id,\n              title: response.data.items[i].volumeInfo.title,\n              author: response.data.items[i].volumeInfo.authors,\n              description: response.data.items[i].volumeInfo.description,\n              img: response.data.items[i].volumeInfo.imageLinks.thumbnail\n            };\n            bookList.push(bookItem);\n          }\n\n          this.setState({\n            myBooks: bookList\n          });\n        }).catch(function (error) {\n          console.log(error);\n        }); //console.log(searchQuery);\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.myfunc();\n    axios.get('https://www.googleapis.com/books/v1/users/105309221066047026022/bookshelves/1001/volumes').then(response => {\n      /*\n      const bookList = [];\n      for(var i=0; i < response.data.items.length; i++){\n        //let imageUrl = URL.createObjectURL(response.data.items[i].volumeInfo.previewLink);\n        const bookItem = {\n          id: response.data.items[i].id,\n          title: response.data.items[i].volumeInfo.title,\n          author: response.data.items[i].volumeInfo.authors,\n          description: response.data.items[i].volumeInfo.description,\n          img: response.data.items[i].volumeInfo.imageLinks.thumbnail\n        }\n        bookList.push(bookItem);\n      }\n      this.setState({myBooks: bookList});\n      */\n      console.log(response);\n    }).catch(function (error) {\n      console.log(error); //console.log(\"fail\");\n    });\n  } //document.getElementbyId\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Search, {\n      performSearch: this.performSearch,\n      searchQuery: this.state.searchQuery,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(BookGrid, {\n      cols: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }, this.state.myBooks.map((bookItem, i) => /*#__PURE__*/React.createElement(BookCard, {\n      title: bookItem.title,\n      id: bookItem.id,\n      author: bookItem.author,\n      img: bookItem.img,\n      description: bookItem.description,\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/selena/readinglist/client/src/components/Home.js"],"names":["React","Component","KeyboardEvent","axios","BookGrid","BookCard","Search","Home","state","myBooks","searchQuery","myfunc","fetch","then","response","json","commits","alert","author","login","performSearch","event","key","get","bookList","i","data","items","length","bookItem","id","title","volumeInfo","authors","description","img","imageLinks","thumbnail","push","setState","catch","error","console","log","componentDidMount","render","map"],"mappings":"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","sourcesContent":["import React, {Component, KeyboardEvent} from 'react';\nimport axios from 'axios';\nimport BookGrid from \"./grid/BookGrid\";\nimport BookCard from \"./grid/BookCard\";\nimport Search from './Search';\n\nclass Home extends Component{\n  state = {\n    myBooks: [],\n    searchQuery: \"empty\"\n  }\n  myfunc = () => {\n    fetch('https://www.googleapis.com/books/v1/users/105309221066047026022/bookshelves/1001/volumes')\n  .then(response => response.json())\n  .then(commits => alert(commits[0].author.login));\n  }\n  componentDidMount(){\n    this.myfunc();\n    axios.get('https://www.googleapis.com/books/v1/users/105309221066047026022/bookshelves/1001/volumes')\n      .then((response) => {\n        /*\n        const bookList = [];\n        for(var i=0; i < response.data.items.length; i++){\n          //let imageUrl = URL.createObjectURL(response.data.items[i].volumeInfo.previewLink);\n          const bookItem = {\n            id: response.data.items[i].id,\n            title: response.data.items[i].volumeInfo.title,\n            author: response.data.items[i].volumeInfo.authors,\n            description: response.data.items[i].volumeInfo.description,\n            img: response.data.items[i].volumeInfo.imageLinks.thumbnail\n          }\n          bookList.push(bookItem);\n        }\n        this.setState({myBooks: bookList});\n        */\n        console.log(response);\n      })\n      .catch(function (error){\n        console.log(error);\n        //console.log(\"fail\");\n      })\n  }\n\n  //document.getElementbyId\n  performSearch = (event: KeyboardEvent<HTMLInputElement>, searchQuery ) => {\n    if(event.key === 'Enter'){\n\n      axios.get('https://www.googleapis.com/books/v1/volumes?q='+searchQuery)\n      .then((response) => {\n        const bookList = [];\n        for(var i=0; i < response.data.items.length; i++){\n          //let imageUrl = URL.createObjectURL(response.data.items[i].volumeInfo.previewLink);\n          const bookItem = {\n            id: response.data.items[i].id,\n            title: response.data.items[i].volumeInfo.title,\n            author: response.data.items[i].volumeInfo.authors,\n            description: response.data.items[i].volumeInfo.description,\n            img: response.data.items[i].volumeInfo.imageLinks.thumbnail\n          }\n          bookList.push(bookItem);\n        }\n        this.setState({myBooks: bookList});\n      })\n      .catch(function (error){\n        console.log(error);\n      })\n          //console.log(searchQuery);\n    }\n  }\n  render (){\n    return (\n      <div className=\"container\">\n        <Search performSearch={this.performSearch} searchQuery={this.state.searchQuery}/>\n        <BookGrid cols={3}>\n        {\n          this.state.myBooks.map((bookItem, i) => (\n            <BookCard title={bookItem.title} id={bookItem.id} author={bookItem.author} img={bookItem.img} description={bookItem.description} key={i}/>\n          ))}\n        </BookGrid>\n      </div>\n    )\n  }\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}