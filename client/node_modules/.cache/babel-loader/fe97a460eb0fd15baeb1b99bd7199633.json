{"ast":null,"code":"var _jsxFileName = \"/Users/selena/readinglist/client/src/components/UserHome.js\";\nimport React, { Component, KeyboardEvent } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport BookGrid from \"./grid/BookGrid\";\nimport BookCard from \"./grid/BookCard\";\nimport Search from \"./Search\";\nimport getBooks from \"./../actions/getBooks\";\nimport { isEmpty } from 'lodash';\n\nfunction IsLoading(props) {\n  const isLoading = props.isLoading;\n\n  if (isLoading) {\n    return /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 12\n      }\n    }, \"Loading...\");\n  }\n\n  return 0;\n}\n\nclass UserHome extends Component {\n  constructor(props) {\n    super(props);\n\n    this.loadBooks = email => {\n      axios.post(\"/api/users/getBookList\", email).then(response => response.json()).then(responsedata => {\n        console.log(responsedata);\n      }).catch(err => {\n        console.log(err);\n      });\n      /*\n      fetch(\"/api/users/getBookList\", email)\n        .then(response => {console.log(response)})\n        .catch(function (error){\n          console.log(error);\n       });\n       */\n    };\n\n    this.state = {\n      user: this.props.location.state.userData.email,\n      isLoading: true,\n      //jsonBookList: {},\n      //  myBooks: [book1, book2, book3] //this is an array of objects once populated\n      myBooks: []\n    };\n  }\n\n  getUserName(pathname) {\n    var path_arr = pathname.split(\"/\");\n    return path_arr[2];\n  }\n\n  //loadBooks(this.state.user);\n  componentDidMount() {\n    //setState({user: decoded_token})\n    //const jsonBookList = this.getBookList(); //return json object containing the list of book links\n    //console.log(jsonBookList);\n    //this.getBooks(jsonBookList);\n    //this.setState({user: this.props.location.state.userData.email})\n    console.log(this.state); //const userName = this.getUserName(this.props.location.pathname);\n    //getBooks(this.state.user);\n    //const email = this.state.user;\n    //this.loadBooks(email);\n    //  this.loadBooks(this.state.user);\n    //let jsonList = {};\n\n    axios.post(\"/api/users/getBookList\", this.state.user).then(res => {\n      console.log(res);\n      console.log(\"hELLO\");\n    }).catch(err => {\n      console.log(err);\n    });\n    /*\n    axios.post(\"/api/users/addBook\", {name: userName, book: jsonBook})\n          .then(res=> {\n            console.log(res.data);\n          }).catch(err => {console.log(err);});\n          */\n\n    /*\n    let jsonList = this.state.jsonBookList;\n    for(let i=0; i<=jsonList.length; i++){\n      console.log(jsonList[i]);\n    }\n    */\n  }\n\n  render() {\n    const myName = this.getUserName(this.props.location.pathname);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }\n    }, \"Hello \", myName), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }\n    }, this.state.isLoading ? 'Loading books...' : '')), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 24\n      }\n    }, \"Explore\"))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(BookGrid, {\n      cols: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\n;\nexport default UserHome;","map":{"version":3,"sources":["/Users/selena/readinglist/client/src/components/UserHome.js"],"names":["React","Component","KeyboardEvent","axios","Link","BookGrid","BookCard","Search","getBooks","isEmpty","IsLoading","props","isLoading","UserHome","constructor","loadBooks","email","post","then","response","json","responsedata","console","log","catch","err","state","user","location","userData","myBooks","getUserName","pathname","path_arr","split","componentDidMount","res","render","myName"],"mappings":"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","sourcesContent":["\nimport React, {Component,  KeyboardEvent}  from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport BookGrid from \"./grid/BookGrid\";\nimport BookCard from \"./grid/BookCard\";\nimport Search from \"./Search\";\nimport getBooks from \"./../actions/getBooks\";\nimport {isEmpty} from 'lodash';\nfunction IsLoading(props){\n  const isLoading = props.isLoading;\n  if (isLoading){\n    return <h1>Loading...</h1>\n  }\n  return 0;\n}\n\nclass UserHome extends Component{\n  constructor(props) {\n    super(props);\n\n    this.state= {\n      user: this.props.location.state.userData.email,\n      isLoading: true,\n      //jsonBookList: {},\n    //  myBooks: [book1, book2, book3] //this is an array of objects once populated\n      myBooks: []\n    }\n  }\n  getUserName(pathname){\n    var path_arr = pathname.split(\"/\");\n    return path_arr[2];\n  }\n  loadBooks = (email) => {\n\n    axios.post(\"/api/users/getBookList\", email)\n    .then(response => response.json())\n    .then((responsedata) => { console.log(responsedata);\n    }).catch(err => {console.log(err);});\n\n    /*\n    fetch(\"/api/users/getBookList\", email)\n      .then(response => {console.log(response)})\n      .catch(function (error){\n        console.log(error);\n     });\n     */\n\n  }\n  //loadBooks(this.state.user);\n\n  componentDidMount(){\n    //setState({user: decoded_token})\n    //const jsonBookList = this.getBookList(); //return json object containing the list of book links\n    //console.log(jsonBookList);\n    //this.getBooks(jsonBookList);\n    //this.setState({user: this.props.location.state.userData.email})\n    console.log(this.state);\n    //const userName = this.getUserName(this.props.location.pathname);\n    //getBooks(this.state.user);\n    //const email = this.state.user;\n    //this.loadBooks(email);\n  //  this.loadBooks(this.state.user);\n    //let jsonList = {};\n    axios.post(\"/api/users/getBookList\", this.state.user).then(res=> {\n      console.log(res);\n      console.log(\"hELLO\");\n    }).catch(err => {console.log(err);});\n\n    /*\n    axios.post(\"/api/users/addBook\", {name: userName, book: jsonBook})\n          .then(res=> {\n            console.log(res.data);\n          }).catch(err => {console.log(err);});\n          */\n    /*\n    let jsonList = this.state.jsonBookList;\n    for(let i=0; i<=jsonList.length; i++){\n      console.log(jsonList[i]);\n    }\n    */\n\n  }\n  render (){\n    const myName = this.getUserName(this.props.location.pathname);\n\n    return (\n      <div>\n        <div>Hello {myName}</div>\n        <div>\n        <p>{this.state.isLoading ? 'Loading books...': ''}</p>\n        </div>\n        <div>\n          <Link to=\"/\"><button>Explore</button></Link>\n        </div>\n        <div>\n          <BookGrid cols={3}>\n          {/*\n            this.state.myBooks.map((bookItem, i) => (\n              <BookCard title={bookItem.title} id={bookItem.id} author={bookItem.author} img={bookItem.img} description={bookItem.description} key={i}/>\n            ))*/}\n          </BookGrid>\n        </div>\n      </div>\n    )\n  }\n};\nexport default UserHome;\n"]},"metadata":{},"sourceType":"module"}