{"ast":null,"code":"var _jsxFileName = \"/Users/selena/readinglist/client/src/components/UserHome.js\";\nimport React, { Component, KeyboardEvent } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport BookGrid from \"./grid/BookGrid\";\nimport BookCard from \"./grid/BookCard\";\nimport Search from \"./Search\";\nimport getBooks from \"./../actions/getBooks\";\nimport { isEmpty } from 'lodash';\n\nfunction IsLoading(props) {\n  const isLoading = props.isLoading;\n\n  if (isLoading) {\n    return /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 12\n      }\n    }, \"Loading...\");\n  }\n\n  return 0;\n}\n\nclass UserHome extends Component {\n  constructor(props) {\n    super(props);\n\n    this.loadBooks = email => {\n      axios.post(\"/api/users/getBookList\", {\n        email: this.state.user\n      }).then(response => {\n        //console.log(response.data.booklist);\n        const bookList = response.data.booklist;\n        const books = [];\n\n        for (let i = 0; i < bookList.length; i++) {\n          const book = {\n            id: bookList[i].id,\n            //how I will save users books in db.\n            title: bookList[i].title,\n            author: bookList[i].author,\n            description: bookList[i].description,\n            img: bookList[i].img\n          };\n          books.push(book);\n        }\n\n        this.setState({\n          myBooks: books\n        });\n        this.setState({\n          isLoading: false\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.state = {\n      user: this.props.location.state.userData.email,\n      isLoading: true,\n      //jsonBookList: {},\n      //  myBooks: [book1, book2, book3] //this is an array of objects once populated\n      myBooks: []\n    };\n  }\n\n  getUserName(pathname) {\n    var path_arr = pathname.split(\"/\");\n    return path_arr[2];\n  }\n\n  //loadBooks(this.state.user);\n  componentDidMount() {\n    //setState({user: decoded_token})\n    //const jsonBookList = this.getBookList(); //return json object containing the list of book links\n    //console.log(jsonBookList);\n    //this.getBooks(jsonBookList);\n    //this.setState({user: this.props.location.state.userData.email})\n    console.log(this.state); //const userName = this.getUserName(this.props.location.pathname);\n    //getBooks(this.state.user);\n    //const email = this.state.user;\n    //this.loadBooks(email);\n\n    this.loadBooks(this.state.user); //let jsonList = {};\n\n    /*\n    axios.post(\"/api/users/addBook\", {name: userName, book: jsonBook})\n          .then(res=> {\n            console.log(res.data);\n          }).catch(err => {console.log(err);});\n          */\n\n    /*\n    let jsonList = this.state.jsonBookList;\n    for(let i=0; i<=jsonList.length; i++){\n      console.log(jsonList[i]);\n    }\n    */\n  }\n\n  render() {\n    const myName = this.getUserName(this.props.location.pathname);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    }, \"Hello \", myName), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }\n    }, this.state.isLoading ? 'Loading books...' : '')), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 24\n      }\n    }, \"Explore\"))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(BookGrid, {\n      cols: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\n;\nexport default UserHome;","map":{"version":3,"sources":["/Users/selena/readinglist/client/src/components/UserHome.js"],"names":["React","Component","KeyboardEvent","axios","Link","BookGrid","BookCard","Search","getBooks","isEmpty","IsLoading","props","isLoading","UserHome","constructor","loadBooks","email","post","state","user","then","response","bookList","data","booklist","books","i","length","book","id","title","author","description","img","push","setState","myBooks","catch","err","console","log","location","userData","getUserName","pathname","path_arr","split","componentDidMount","render","myName"],"mappings":"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","sourcesContent":["\nimport React, {Component,  KeyboardEvent}  from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport BookGrid from \"./grid/BookGrid\";\nimport BookCard from \"./grid/BookCard\";\nimport Search from \"./Search\";\nimport getBooks from \"./../actions/getBooks\";\nimport {isEmpty} from 'lodash';\nfunction IsLoading(props){\n  const isLoading = props.isLoading;\n  if (isLoading){\n    return <h1>Loading...</h1>\n  }\n  return 0;\n}\n\nclass UserHome extends Component{\n  constructor(props) {\n    super(props);\n\n    this.state= {\n      user: this.props.location.state.userData.email,\n      isLoading: true,\n      //jsonBookList: {},\n    //  myBooks: [book1, book2, book3] //this is an array of objects once populated\n      myBooks: []\n    }\n  }\n  getUserName(pathname){\n    var path_arr = pathname.split(\"/\");\n    return path_arr[2];\n  }\n  loadBooks = (email) => {\n    axios.post(\"/api/users/getBookList\", {email: this.state.user})\n    .then((response) => {\n      //console.log(response.data.booklist);\n      const bookList = response.data.booklist;\n      const books = [];\n      for (let i=0; i<bookList.length; i++){\n        const book = {\n          id: bookList[i].id, //how I will save users books in db.\n          title: bookList[i].title,\n          author: bookList[i].author,\n          description: bookList[i].description,\n          img: bookList[i].img\n        }\n        books.push(book);\n      }\n      this.setState({myBooks: books});\n      this.setState({isLoading: false});\n    }).catch(err => {console.log(err);});\n\n\n  }\n  //loadBooks(this.state.user);\n\n  componentDidMount(){\n    //setState({user: decoded_token})\n    //const jsonBookList = this.getBookList(); //return json object containing the list of book links\n    //console.log(jsonBookList);\n    //this.getBooks(jsonBookList);\n    //this.setState({user: this.props.location.state.userData.email})\n    console.log(this.state);\n    //const userName = this.getUserName(this.props.location.pathname);\n    //getBooks(this.state.user);\n    //const email = this.state.user;\n    //this.loadBooks(email);\n    this.loadBooks(this.state.user);\n    //let jsonList = {};\n\n\n\n    /*\n    axios.post(\"/api/users/addBook\", {name: userName, book: jsonBook})\n          .then(res=> {\n            console.log(res.data);\n          }).catch(err => {console.log(err);});\n          */\n    /*\n    let jsonList = this.state.jsonBookList;\n    for(let i=0; i<=jsonList.length; i++){\n      console.log(jsonList[i]);\n    }\n    */\n\n  }\n  render (){\n    const myName = this.getUserName(this.props.location.pathname);\n\n    return (\n      <div>\n        <div>Hello {myName}</div>\n        <div>\n        <p>{this.state.isLoading ? 'Loading books...': ''}</p>\n        </div>\n        <div>\n          <Link to=\"/\"><button>Explore</button></Link>\n        </div>\n        <div>\n          <BookGrid cols={3}>\n          {/*\n            this.state.myBooks.map((bookItem, i) => (\n              <BookCard title={bookItem.title} id={bookItem.id} author={bookItem.author} img={bookItem.img} description={bookItem.description} key={i}/>\n            ))*/}\n          </BookGrid>\n        </div>\n      </div>\n    )\n  }\n};\nexport default UserHome;\n"]},"metadata":{},"sourceType":"module"}