{"ast":null,"code":"var _jsxFileName = \"/Users/selena/readinglist/client/src/components/UserHome.js\";\nimport React, { Component, KeyboardEvent } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport BookGrid from \"./grid/BookGrid\";\nimport BookCard from \"./grid/BookCard\";\nimport Search from \"./Search\";\nimport getBooks from \"./../actions/getBooks\";\nimport ShowBooks from \"./ShowBooks\";\nimport { isEmpty } from 'lodash';\n/*\nfunction IsLoading(props){\n  const isLoading = props.isLoading;\n  if (isLoading){\n    return <h1>Loading...</h1>\n  }\n  return 0;\n}\n*/\n\nclass UserHome extends Component {\n  constructor(props) {\n    super(props);\n\n    this.loadBooks = email => {\n      axios.post(\"/api/users/getBookList\", {\n        email: this.state.user\n      }).then(response => {\n        //console.log(response.data.booklist);\n        const bookList = response.data.booklist;\n        const books = [];\n\n        for (let i = 0; i < bookList.length; i++) {\n          const bookItem = {\n            id: bookList[i].id,\n            //how I will save users books in db.\n            title: bookList[i].title,\n            author: bookList[i].author,\n            description: bookList[i].description,\n            img: bookList[i].img\n          };\n          books.push(bookItem);\n        }\n\n        this.setState({\n          myBooks: books\n        });\n        this.setState({\n          isLoading: false\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.state = {\n      //user: ()=>{if(this.props.location.state.user == null){return this.props.user}else{return this.props.location.state.user; }},\n      //user: this.props.location.state.user,\n      isLoading: true,\n      //jsonBookList: {},\n      //  myBooks: [book1, book2, book3] //this is an array of objects once populated\n      myBooks: []\n    };\n  }\n  /*\n  getUserName(pathname){\n    var path_arr = pathname.split(\"/\");\n    return path_arr[2];\n  }\n  */\n\n\n  getName() {\n    return this.state.user;\n  }\n\n  getUser() {\n    if (this.props.location.state.user == null) {\n      return this.props.user;\n    } else {\n      return this.props.location.state.user;\n    }\n  }\n\n  componentDidMount() {//console.log(this.props.user);\n    //console.log(this.props.location.state.user);\n    //  const userEmail = this.props.location.state.user;\n    //this.setState({user: userEmail});\n    //const userEmail = this.getUser();\n    //this.setState({user: userEmail});\n    //  this.loadBooks(this.state.user);\n  }\n\n  render() {\n    const myName = this.getName();\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }, \"Hello \", myName), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ShowBooks, {\n      isLoading: this.state.isLoading,\n      myBooks: this.state.myBooks,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    })));\n  }\n\n}\n\n;\nexport default UserHome;","map":{"version":3,"sources":["/Users/selena/readinglist/client/src/components/UserHome.js"],"names":["React","Component","KeyboardEvent","axios","Link","BookGrid","BookCard","Search","getBooks","ShowBooks","isEmpty","UserHome","constructor","props","loadBooks","email","post","state","user","then","response","bookList","data","booklist","books","i","length","bookItem","id","title","author","description","img","push","setState","myBooks","isLoading","catch","err","console","log","getName","getUser","location","componentDidMount","render","myName"],"mappings":";AACA,OAAOA,KAAP,IAAeC,SAAf,EAA2BC,aAA3B,QAAgD,OAAhD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAAQC,OAAR,QAAsB,QAAtB;AACA;;;;;;;;;;AASA,MAAMC,QAAN,SAAuBV,SAAvB,CAAgC;AAC9BW,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SA2BnBC,SA3BmB,GA2BNC,KAAD,IAAW;AACrBZ,MAAAA,KAAK,CAACa,IAAN,CAAW,wBAAX,EAAqC;AAACD,QAAAA,KAAK,EAAE,KAAKE,KAAL,CAAWC;AAAnB,OAArC,EACCC,IADD,CACOC,QAAD,IAAc;AAClB;AACA,cAAMC,QAAQ,GAAGD,QAAQ,CAACE,IAAT,CAAcC,QAA/B;AACA,cAAMC,KAAK,GAAG,EAAd;;AACA,aAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACJ,QAAQ,CAACK,MAAzB,EAAiCD,CAAC,EAAlC,EAAqC;AACnC,gBAAME,QAAQ,GAAG;AACfC,YAAAA,EAAE,EAAEP,QAAQ,CAACI,CAAD,CAAR,CAAYG,EADD;AACK;AACpBC,YAAAA,KAAK,EAAER,QAAQ,CAACI,CAAD,CAAR,CAAYI,KAFJ;AAGfC,YAAAA,MAAM,EAAET,QAAQ,CAACI,CAAD,CAAR,CAAYK,MAHL;AAIfC,YAAAA,WAAW,EAAEV,QAAQ,CAACI,CAAD,CAAR,CAAYM,WAJV;AAKfC,YAAAA,GAAG,EAAEX,QAAQ,CAACI,CAAD,CAAR,CAAYO;AALF,WAAjB;AAOAR,UAAAA,KAAK,CAACS,IAAN,CAAWN,QAAX;AACD;;AACD,aAAKO,QAAL,CAAc;AAACC,UAAAA,OAAO,EAAEX;AAAV,SAAd;AACA,aAAKU,QAAL,CAAc;AAACE,UAAAA,SAAS,EAAE;AAAZ,SAAd;AACD,OAjBD,EAiBGC,KAjBH,CAiBSC,GAAG,IAAI;AAACC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AAAkB,OAjBnC;AAkBD,KA9CkB;;AAEjB,SAAKrB,KAAL,GAAY;AACV;AACA;AACAmB,MAAAA,SAAS,EAAE,IAHD;AAIV;AACF;AACED,MAAAA,OAAO,EAAE;AANC,KAAZ;AAQD;AACD;;;;;;;;AAMAM,EAAAA,OAAO,GAAE;AACP,WAAO,KAAKxB,KAAL,CAAWC,IAAlB;AACD;;AACDwB,EAAAA,OAAO,GAAE;AACP,QAAG,KAAK7B,KAAL,CAAW8B,QAAX,CAAoB1B,KAApB,CAA0BC,IAA1B,IAAkC,IAArC,EAA0C;AACxC,aAAO,KAAKL,KAAL,CAAWK,IAAlB;AACD,KAFD,MAEK;AACH,aAAO,KAAKL,KAAL,CAAW8B,QAAX,CAAoB1B,KAApB,CAA0BC,IAAjC;AACD;AACF;;AAqBD0B,EAAAA,iBAAiB,GAAE,CACjB;AACA;AACF;AACE;AACA;AACA;AAEF;AACC;;AACDC,EAAAA,MAAM,GAAG;AACP,UAAMC,MAAM,GAAG,KAAKL,OAAL,EAAf;AAEA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAYK,MAAZ,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAE,KAAK7B,KAAL,CAAWmB,SAAjC;AAA4C,MAAA,OAAO,EAAE,KAAKnB,KAAL,CAAWkB,OAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CAJF,CADF;AAUD;;AAvE6B;;AAwE/B;AACD,eAAexB,QAAf","sourcesContent":["\nimport React, {Component,  KeyboardEvent}  from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport BookGrid from \"./grid/BookGrid\";\nimport BookCard from \"./grid/BookCard\";\nimport Search from \"./Search\";\nimport getBooks from \"./../actions/getBooks\";\nimport ShowBooks from \"./ShowBooks\";\nimport {isEmpty} from 'lodash';\n/*\nfunction IsLoading(props){\n  const isLoading = props.isLoading;\n  if (isLoading){\n    return <h1>Loading...</h1>\n  }\n  return 0;\n}\n*/\nclass UserHome extends Component{\n  constructor(props) {\n    super(props);\n    this.state= {\n      //user: ()=>{if(this.props.location.state.user == null){return this.props.user}else{return this.props.location.state.user; }},\n      //user: this.props.location.state.user,\n      isLoading: true,\n      //jsonBookList: {},\n    //  myBooks: [book1, book2, book3] //this is an array of objects once populated\n      myBooks: []\n    }\n  }\n  /*\n  getUserName(pathname){\n    var path_arr = pathname.split(\"/\");\n    return path_arr[2];\n  }\n  */\n  getName(){\n    return this.state.user;\n  }\n  getUser(){\n    if(this.props.location.state.user == null){\n      return this.props.user\n    }else{\n      return this.props.location.state.user;\n    }\n  }\n  loadBooks = (email) => {\n    axios.post(\"/api/users/getBookList\", {email: this.state.user})\n    .then((response) => {\n      //console.log(response.data.booklist);\n      const bookList = response.data.booklist;\n      const books = [];\n      for (let i=0; i<bookList.length; i++){\n        const bookItem = {\n          id: bookList[i].id, //how I will save users books in db.\n          title: bookList[i].title,\n          author: bookList[i].author,\n          description: bookList[i].description,\n          img: bookList[i].img\n        }\n        books.push(bookItem);\n      }\n      this.setState({myBooks: books});\n      this.setState({isLoading: false});\n    }).catch(err => {console.log(err);});\n  };\n  componentDidMount(){\n    //console.log(this.props.user);\n    //console.log(this.props.location.state.user);\n  //  const userEmail = this.props.location.state.user;\n    //this.setState({user: userEmail});\n    //const userEmail = this.getUser();\n    //this.setState({user: userEmail});\n\n  //  this.loadBooks(this.state.user);\n  }\n  render (){\n    const myName = this.getName();\n\n    return (\n      <div>\n        <div>Hello {myName}</div>\n        <div>\n        </div>\n        <div>\n        <ShowBooks isLoading={this.state.isLoading} myBooks={this.state.myBooks}/>\n        </div>\n      </div>\n    )\n  }\n};\nexport default UserHome;\n"]},"metadata":{},"sourceType":"module"}