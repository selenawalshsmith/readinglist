{"ast":null,"code":"var _jsxFileName = \"/Users/selena/readinglist/client/src/components/UserHome.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport BookGrid from \"./grid/BookGrid\";\nimport BookCard from \"./grid/BookCard\";\nimport Search from \"./Search\";\n\nclass UserHome extends Component {\n  constructor(props) {\n    super(props);\n\n    this.performSearch = (event, searchQuery) => {\n      if (event.key === 'Enter') {\n        axios.get('https://www.googleapis.com/books/v1/volumes?q=' + searchQuery).then(response => {\n          const bookList = [];\n\n          for (var i = 0; i < response.data.items.length; i++) {\n            //let imageUrl = URL.createObjectURL(response.data.items[i].volumeInfo.previewLink);\n            const bookItem = {\n              id: response.data.items[i].id,\n              title: response.data.items[i].volumeInfo.title,\n              author: response.data.items[i].volumeInfo.authors,\n              description: response.data.items[i].volumeInfo.description,\n              img: response.data.items[i].volumeInfo.imageLinks.thumbnail\n            };\n            bookList.push(bookItem);\n          }\n\n          this.setState({\n            myBooks: bookList\n          });\n        }).catch(function (error) {\n          console.log(error);\n        }); //console.log(searchQuery);\n      }\n    };\n\n    this.state = {\n      myBooks: [],\n      searchQuery: \"empty\"\n    };\n  }\n\n  getUserName(pathname) {\n    var path_arr = pathname.split(\"/\");\n    return path_arr[2];\n  }\n\n  render() {\n    const myName = this.getUserName(this.props.location.pathname);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }, \"Hello \", myName), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Search, {\n      performSearch: this.performSearch,\n      searchQuery: this.state.searchQuery,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(BookGrid, {\n      cols: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }, this.state.myBooks.map((bookItem, i) => /*#__PURE__*/React.createElement(BookCard, {\n      title: bookItem.title,\n      id: bookItem.id,\n      author: bookItem.author,\n      img: bookItem.img,\n      description: bookItem.description,\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 15\n      }\n    })))));\n  }\n\n}\n\n;\nexport default UserHome;","map":{"version":3,"sources":["/Users/selena/readinglist/client/src/components/UserHome.js"],"names":["React","Component","axios","BookGrid","BookCard","Search","UserHome","constructor","props","performSearch","event","searchQuery","key","get","then","response","bookList","i","data","items","length","bookItem","id","title","volumeInfo","author","authors","description","img","imageLinks","thumbnail","push","setState","myBooks","catch","error","console","log","state","getUserName","pathname","path_arr","split","render","myName","location","map"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,MAAMC,QAAN,SAAuBL,SAAvB,CAAgC;AAC9BM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAWnBC,aAXmB,GAWH,CAACC,KAAD,EAAyCC,WAAzC,KAA0D;AACxE,UAAGD,KAAK,CAACE,GAAN,KAAc,OAAjB,EAAyB;AAEvBV,QAAAA,KAAK,CAACW,GAAN,CAAU,mDAAiDF,WAA3D,EACCG,IADD,CACOC,QAAD,IAAc;AAClB,gBAAMC,QAAQ,GAAG,EAAjB;;AACA,eAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAGF,QAAQ,CAACG,IAAT,CAAcC,KAAd,CAAoBC,MAArC,EAA6CH,CAAC,EAA9C,EAAiD;AAC/C;AACA,kBAAMI,QAAQ,GAAG;AACfC,cAAAA,EAAE,EAAEP,QAAQ,CAACG,IAAT,CAAcC,KAAd,CAAoBF,CAApB,EAAuBK,EADZ;AAEfC,cAAAA,KAAK,EAAER,QAAQ,CAACG,IAAT,CAAcC,KAAd,CAAoBF,CAApB,EAAuBO,UAAvB,CAAkCD,KAF1B;AAGfE,cAAAA,MAAM,EAAEV,QAAQ,CAACG,IAAT,CAAcC,KAAd,CAAoBF,CAApB,EAAuBO,UAAvB,CAAkCE,OAH3B;AAIfC,cAAAA,WAAW,EAAEZ,QAAQ,CAACG,IAAT,CAAcC,KAAd,CAAoBF,CAApB,EAAuBO,UAAvB,CAAkCG,WAJhC;AAKfC,cAAAA,GAAG,EAAEb,QAAQ,CAACG,IAAT,CAAcC,KAAd,CAAoBF,CAApB,EAAuBO,UAAvB,CAAkCK,UAAlC,CAA6CC;AALnC,aAAjB;AAOAd,YAAAA,QAAQ,CAACe,IAAT,CAAcV,QAAd;AACD;;AACD,eAAKW,QAAL,CAAc;AAACC,YAAAA,OAAO,EAAEjB;AAAV,WAAd;AACD,SAfD,EAgBCkB,KAhBD,CAgBO,UAAUC,KAAV,EAAgB;AACrBC,UAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,SAlBD,EAFuB,CAqBnB;AACL;AACF,KAnCkB;;AAEjB,SAAKG,KAAL,GAAa;AACXL,MAAAA,OAAO,EAAE,EADE;AAEXtB,MAAAA,WAAW,EAAE;AAFF,KAAb;AAID;;AACD4B,EAAAA,WAAW,CAACC,QAAD,EAAU;AACnB,QAAIC,QAAQ,GAAGD,QAAQ,CAACE,KAAT,CAAe,GAAf,CAAf;AACA,WAAOD,QAAQ,CAAC,CAAD,CAAf;AACD;;AA0BDE,EAAAA,MAAM,GAAG;AACP,UAAMC,MAAM,GAAG,KAAKL,WAAL,CAAiB,KAAK/B,KAAL,CAAWqC,QAAX,CAAoBL,QAArC,CAAf;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAYI,MAAZ,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAQ,MAAA,aAAa,EAAE,KAAKnC,aAA5B;AAA2C,MAAA,WAAW,EAAE,KAAK6B,KAAL,CAAW3B,WAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAE,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,KAAK2B,KAAL,CAAWL,OAAX,CAAmBa,GAAnB,CAAuB,CAACzB,QAAD,EAAWJ,CAAX,kBACrB,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAEI,QAAQ,CAACE,KAA1B;AAAiC,MAAA,EAAE,EAAEF,QAAQ,CAACC,EAA9C;AAAkD,MAAA,MAAM,EAAED,QAAQ,CAACI,MAAnE;AAA2E,MAAA,GAAG,EAAEJ,QAAQ,CAACO,GAAzF;AAA8F,MAAA,WAAW,EAAEP,QAAQ,CAACM,WAApH;AAAiI,MAAA,GAAG,EAAEV,CAAtI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAFF,CAFF,CAFF,CADF;AAcD;;AArD6B;;AAsD/B;AACD,eAAeX,QAAf","sourcesContent":["import React, {Component}  from 'react';\nimport axios from 'axios';\nimport BookGrid from \"./grid/BookGrid\";\nimport BookCard from \"./grid/BookCard\";\nimport Search from \"./Search\";\n\nclass UserHome extends Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      myBooks: [],\n      searchQuery: \"empty\"\n    }\n  }\n  getUserName(pathname){\n    var path_arr = pathname.split(\"/\");\n    return path_arr[2];\n  }\n  performSearch = (event: KeyboardEvent<HTMLInputElement>, searchQuery ) => {\n    if(event.key === 'Enter'){\n\n      axios.get('https://www.googleapis.com/books/v1/volumes?q='+searchQuery)\n      .then((response) => {\n        const bookList = [];\n        for(var i=0; i < response.data.items.length; i++){\n          //let imageUrl = URL.createObjectURL(response.data.items[i].volumeInfo.previewLink);\n          const bookItem = {\n            id: response.data.items[i].id,\n            title: response.data.items[i].volumeInfo.title,\n            author: response.data.items[i].volumeInfo.authors,\n            description: response.data.items[i].volumeInfo.description,\n            img: response.data.items[i].volumeInfo.imageLinks.thumbnail\n          }\n          bookList.push(bookItem);\n        }\n        this.setState({myBooks: bookList});\n      })\n      .catch(function (error){\n        console.log(error);\n      })\n          //console.log(searchQuery);\n    }\n  }\n  render (){\n    const myName = this.getUserName(this.props.location.pathname);\n    return (\n      <div>\n        <div>Hello {myName}</div>\n        <div>\n          <Search performSearch={this.performSearch} searchQuery={this.state.searchQuery}/>\n          <BookGrid cols={3}>\n          {\n            this.state.myBooks.map((bookItem, i) => (\n              <BookCard title={bookItem.title} id={bookItem.id} author={bookItem.author} img={bookItem.img} description={bookItem.description} key={i}/>\n            ))}\n          </BookGrid>\n        </div>\n      </div>\n    )\n  }\n};\nexport default UserHome;\n"]},"metadata":{},"sourceType":"module"}