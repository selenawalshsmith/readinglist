{"ast":null,"code":"var _jsxFileName = \"/Users/selena/readinglist/client/src/components/UserHome.js\";\nimport React, { Component, KeyboardEvent } from 'react';\nimport axios from 'axios';\nimport { Link, Redirect } from 'react-router-dom';\nimport BookGrid from \"./grid/BookGrid\";\nimport BookCard from \"./grid/BookCard\";\nimport Search from \"./Search\";\nimport getBooks from \"./../actions/getBooks\";\nimport ShowUserBooks from \"./ShowBooks\";\nimport { isEmpty } from 'lodash';\nimport PropTypes from 'prop-types';\nimport jwt_decode from \"jwt-decode\"; //import setAuthToken from \"./actions/setAuthToken\";\n\n/*\nfunction IsLoading(props){\n  const isLoading = props.isLoading;\n  if (isLoading){\n    return <h1>Loading...</h1>\n  }\n  return 0;\n}\n*/\n\nclass UserHome extends Component {\n  constructor(props) {\n    super(props);\n\n    this.loadBooks = email => {\n      axios.post(\"/api/users/getBookList\", {\n        email: email\n      }).then(response => {\n        //console.log(response.data.booklist);\n        const bookList = response.data.booklist;\n        const books = [];\n\n        for (let i = 0; i < bookList.length; i++) {\n          const bookItem = {\n            id: bookList[i].id,\n            //how I will save users books in db.\n            title: bookList[i].title,\n            author: bookList[i].author,\n            description: bookList[i].description,\n            img: bookList[i].img\n          };\n          books.push(bookItem);\n        }\n\n        this.setState({\n          myBooks: books\n        });\n        this.setState({\n          isLoading: false\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.state = {\n      user: this.props.user,\n      isLoading: true,\n      myBooks: [],\n      redirect: null\n    };\n  }\n\n  getName() {\n    return this.state.user;\n  }\n\n  getUser() {\n    if (this.props.location.state.user == null) {\n      return this.props.user;\n    } else {\n      return this.props.location.state.user;\n    }\n  }\n\n  componentDidMount() {\n    //Check for user's JSON token\n    if (localStorage.jwtToken) {\n      const token = localStorage.jwtToken;\n      const decoded = jwt_decode(token); //get the email from token and setState\n\n      this.setState({\n        user: decoded.email\n      });\n      this.loadBooks(decoded.email);\n    } else {\n      //if there's no token redirect to user\n      this.setState({\n        redirect: \"/login\"\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Redirect, {\n      to: this.state.redirect,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 14\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }, \"Hello \", this.state.user), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ShowUserBooks, {\n      isLoading: this.state.isLoading,\n      myBooks: this.state.myBooks,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    })));\n  }\n\n}\n\n;\nexport default UserHome;","map":{"version":3,"sources":["/Users/selena/readinglist/client/src/components/UserHome.js"],"names":["React","Component","KeyboardEvent","axios","Link","Redirect","BookGrid","BookCard","Search","getBooks","ShowUserBooks","isEmpty","PropTypes","jwt_decode","UserHome","constructor","props","loadBooks","email","post","then","response","bookList","data","booklist","books","i","length","bookItem","id","title","author","description","img","push","setState","myBooks","isLoading","catch","err","console","log","state","user","redirect","getName","getUser","location","componentDidMount","localStorage","jwtToken","token","decoded","render"],"mappings":"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","sourcesContent":["\nimport React, {Component,  KeyboardEvent}  from 'react';\nimport axios from 'axios';\nimport { Link, Redirect } from 'react-router-dom';\nimport BookGrid from \"./grid/BookGrid\";\nimport BookCard from \"./grid/BookCard\";\nimport Search from \"./Search\";\nimport getBooks from \"./../actions/getBooks\";\nimport ShowUserBooks from \"./ShowBooks\";\nimport {isEmpty} from 'lodash';\nimport PropTypes from 'prop-types'\nimport jwt_decode from \"jwt-decode\";\n//import setAuthToken from \"./actions/setAuthToken\";\n/*\nfunction IsLoading(props){\n  const isLoading = props.isLoading;\n  if (isLoading){\n    return <h1>Loading...</h1>\n  }\n  return 0;\n}\n*/\nclass UserHome extends Component{\n  constructor(props) {\n    super(props);\n    this.state= {\n      user: this.props.user,\n      isLoading: true,\n      myBooks: [],\n      redirect: null\n    }\n  }\n  getName(){\n    return this.state.user;\n  }\n  getUser(){\n    if(this.props.location.state.user == null){\n      return this.props.user\n    }else{\n      return this.props.location.state.user;\n    }\n  }\n  loadBooks = (email) => {\n    axios.post(\"/api/users/getBookList\", {email: email})\n    .then((response) => {\n      //console.log(response.data.booklist);\n      const bookList = response.data.booklist;\n      const books = [];\n      for (let i=0; i<bookList.length; i++){\n        const bookItem = {\n          id: bookList[i].id, //how I will save users books in db.\n          title: bookList[i].title,\n          author: bookList[i].author,\n          description: bookList[i].description,\n          img: bookList[i].img\n        }\n        books.push(bookItem);\n      }\n      this.setState({myBooks: books});\n      this.setState({isLoading: false});\n    }).catch(err => {console.log(err);});\n  };\n  componentDidMount(){\n    //Check for user's JSON token\n    if (localStorage.jwtToken) {\n      const token = localStorage.jwtToken;\n      const decoded = jwt_decode(token);\n      //get the email from token and setState\n      this.setState({user: decoded.email});\n      this.loadBooks(decoded.email);\n    } else {\n      //if there's no token redirect to user\n      this.setState({redirect: \"/login\"});\n    }\n  }\n  render (){\n    return (\n      <div>\n        <div><Redirect to={this.state.redirect}/></div>\n        <div>Hello {this.state.user}</div>\n        <div>\n        <ShowUserBooks isLoading={this.state.isLoading} myBooks={this.state.myBooks}/>\n        </div>\n      </div>\n    )\n  }\n};\nexport default UserHome;\n"]},"metadata":{},"sourceType":"module"}