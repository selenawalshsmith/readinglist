{"ast":null,"code":"var _jsxFileName = \"/Users/selena/readinglist/client/src/components/UserHome.js\";\nimport React, { Component, KeyboardEvent } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport BookGrid from \"./grid/BookGrid\";\nimport BookCard from \"./grid/BookCard\";\nimport Search from \"./Search\";\nimport { isEmpty } from 'lodash';\n\nfunction IsLoading(props) {\n  const isLoading = props.isLoading;\n\n  if (isLoading) {\n    return /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 12\n      }\n    }, \"Loading...\");\n  }\n\n  return 0;\n}\n\nclass UserHome extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: {},\n      jsonBookList: {},\n      myBooks: [] //this is an array of objects once populated\n\n    };\n  }\n\n  getUserName(pathname) {\n    var path_arr = pathname.split(\"/\");\n    return path_arr[2];\n  }\n  /*\n  getBookList(){\n    const userName = this.getUserName(this.props.location.pathname);\n    let jsonList = {};\n    axios\n      .post(\"/api/users/getBookList\", {name: userName})\n      .then(res => {\n        console.log(res.data.success.booklist);\n        //jsonList = res.data.success.booklist;\n        this.setState({jsonBookList: res.data.success.booklist})\n      }).catch(err => {console.log(err);});\n    return jsonList;\n  }\n  */\n\n\n  getBooks(bookList) {\n    for (let i = 0; i <= bookList.length; i++) {//console.log(bookList[i]);\n    }\n\n    console.log(bookList);\n  }\n\n  componentDidMount() {\n    //setState({user: decoded_token})\n    //const jsonBookList = this.getBookList(); //return json object containing the list of book links\n    //console.log(jsonBookList);\n    //this.getBooks(jsonBookList);\n    const userName = this.getUserName(this.props.location.pathname); //let jsonList = {};\n\n    axios.post(\"/api/users/getBookList\", {\n      name: userName\n    }).then(res => {\n      console.log(res.data.success.booklist); //jsonList = res.data.success.booklist;\n\n      this.setState({\n        jsonBookList: res.data.success.booklist\n      });\n    }).catch(err => {\n      console.log(err);\n    }); //console.log(jsonList);\n    //this.getBooks(jsonList);\n    //this.getBooks(this.state.jsonBookList);\n\n    jsonList = this.state.jsonBookList;\n\n    for (let i = 0; i <= jsonList.length; i++) {\n      console.log(jsonList[i]);\n    }\n  }\n\n  render() {\n    const myName = this.getUserName(this.props.location.pathname);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }, \"Hello \", myName), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 24\n      }\n    }, \"Explore\"))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(BookGrid, {\n      cols: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\n;\nexport default UserHome;","map":{"version":3,"sources":["/Users/selena/readinglist/client/src/components/UserHome.js"],"names":["React","Component","KeyboardEvent","axios","Link","BookGrid","BookCard","Search","isEmpty","IsLoading","props","isLoading","UserHome","constructor","state","user","jsonBookList","myBooks","getUserName","pathname","path_arr","split","getBooks","bookList","i","length","console","log","componentDidMount","userName","location","post","name","then","res","data","success","booklist","setState","catch","err","jsonList","render","myName"],"mappings":"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","sourcesContent":["\nimport React, {Component,  KeyboardEvent}  from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport BookGrid from \"./grid/BookGrid\";\nimport BookCard from \"./grid/BookCard\";\nimport Search from \"./Search\";\nimport {isEmpty} from 'lodash';\nfunction IsLoading(props){\n  const isLoading = props.isLoading;\n  if (isLoading){\n    return <h1>Loading...</h1>\n  }\n  return 0;\n}\nclass UserHome extends Component{\n  constructor(props) {\n    super(props);\n    this.state= {\n      user: {},\n      jsonBookList: {},\n      myBooks: [] //this is an array of objects once populated\n\n    }\n  }\n  getUserName(pathname){\n    var path_arr = pathname.split(\"/\");\n    return path_arr[2];\n  }\n  /*\n  getBookList(){\n    const userName = this.getUserName(this.props.location.pathname);\n    let jsonList = {};\n    axios\n      .post(\"/api/users/getBookList\", {name: userName})\n      .then(res => {\n        console.log(res.data.success.booklist);\n        //jsonList = res.data.success.booklist;\n        this.setState({jsonBookList: res.data.success.booklist})\n      }).catch(err => {console.log(err);});\n    return jsonList;\n }\n */\n getBooks(bookList){\n   for(let i=0; i<=bookList.length; i++){\n     //console.log(bookList[i]);\n   }\n   console.log(bookList)\n }\n  componentDidMount(){\n    //setState({user: decoded_token})\n    //const jsonBookList = this.getBookList(); //return json object containing the list of book links\n    //console.log(jsonBookList);\n    //this.getBooks(jsonBookList);\n    const userName = this.getUserName(this.props.location.pathname);\n    //let jsonList = {};\n    axios\n      .post(\"/api/users/getBookList\", {name: userName})\n      .then(res => {\n        console.log(res.data.success.booklist);\n        //jsonList = res.data.success.booklist;\n        this.setState({jsonBookList: res.data.success.booklist})\n      }).catch(err => {console.log(err);});\n    //console.log(jsonList);\n    //this.getBooks(jsonList);\n    //this.getBooks(this.state.jsonBookList);\n    jsonList = this.state.jsonBookList;\n    for(let i=0; i<=jsonList.length; i++){\n      console.log(jsonList[i]);\n    }\n\n  }\n  render (){\n    const myName = this.getUserName(this.props.location.pathname);\n\n    return (\n      <div>\n        <div>Hello {myName}</div>\n        <div>\n        {/*  <IsLoading isLoading={isEmpty(this.jsonBookList)}/> */}\n        </div>\n        <div>\n          <Link to=\"/\"><button>Explore</button></Link>\n        </div>\n        <div>\n          <BookGrid cols={3}>\n          {/*\n            this.state.myBooks.map((bookItem, i) => (\n              <BookCard title={bookItem.title} id={bookItem.id} author={bookItem.author} img={bookItem.img} description={bookItem.description} key={i}/>\n            ))*/}\n          </BookGrid>\n        </div>\n      </div>\n    )\n  }\n};\nexport default UserHome;\n"]},"metadata":{},"sourceType":"module"}